# Generated by Django 2.1.5 on 2019-06-12 17:03

from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import players.storage


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Goalie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='nme', max_length=128)),
                ('nhl_id', models.IntegerField(default=25, unique=True)),
                ('slug', models.SlugField()),
                ('image', models.ImageField(default='skater_default.png', storage=players.storage.OverwriteStorage(), upload_to='players_pics')),
                ('position_abbr', models.CharField(default='', max_length=128)),
                ('position_name', models.CharField(default='', max_length=128)),
                ('height', models.CharField(default='', max_length=128, null=True)),
                ('weight', models.IntegerField(default=25, null=True)),
                ('birth_date', models.CharField(default='', max_length=128)),
                ('birth_city', models.CharField(default='', max_length=128, null=True)),
                ('birth_state', models.CharField(blank=True, default='', max_length=128, null=True)),
                ('birth_country', models.CharField(default='', max_length=128, null=True)),
                ('birth_country_abbr', models.CharField(default='', max_length=128, null=True)),
                ('nation', models.CharField(default='', max_length=128, null=True)),
                ('nation_abbr', models.CharField(default='', max_length=128, null=True)),
                ('nation_flag', models.ImageField(default='flag.png', upload_to='flags')),
                ('draft_year', models.CharField(default='', max_length=128, null=True)),
                ('draft_round', models.CharField(default='', max_length=128, null=True)),
                ('draft_number', models.CharField(default='', max_length=128, null=True)),
                ('pl_number', models.IntegerField(default=25, null=True)),
                ('age', models.IntegerField(default=25, null=True)),
                ('roster_status', models.CharField(default='', max_length=128)),
                ('nhl_debut', models.CharField(default='', max_length=12)),
                ('rookie', models.BooleanField(default=False)),
                ('captain', models.BooleanField(default=False)),
                ('alt_captain', models.BooleanField(default=False)),
                ('sbs_stats', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('career_stats', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('gamelog_stats', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('games', models.IntegerField(default=25)),
                ('multiteams_seasons', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict)),
                ('seasons_count', models.IntegerField(default=0)),
                ('proj_stats', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('wins', models.IntegerField(default=10)),
                ('losses', models.IntegerField()),
                ('ot_losses', models.IntegerField()),
                ('goals_against_av', models.FloatField()),
                ('saves_perc', models.FloatField()),
                ('saves', models.IntegerField()),
                ('shotouts', models.IntegerField()),
                ('compare', models.ManyToManyField(blank=True, related_name='compare_g', to=settings.AUTH_USER_MODEL)),
                ('favorite', models.ManyToManyField(blank=True, related_name='favorite_g', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(blank=True, max_length=400)),
                ('player_name', models.CharField(max_length=80)),
                ('object_id', models.PositiveIntegerField(null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('content_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=5), blank=True, default=list, size=None)),
                ('player_name', models.CharField(max_length=80)),
                ('object_id', models.PositiveIntegerField(null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('content_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='Skater',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='nme', max_length=128)),
                ('nhl_id', models.IntegerField(default=25, unique=True)),
                ('slug', models.SlugField()),
                ('image', models.ImageField(default='skater_default.png', storage=players.storage.OverwriteStorage(), upload_to='players_pics')),
                ('position_abbr', models.CharField(default='', max_length=128)),
                ('position_name', models.CharField(default='', max_length=128)),
                ('height', models.CharField(default='', max_length=128, null=True)),
                ('weight', models.IntegerField(default=25, null=True)),
                ('birth_date', models.CharField(default='', max_length=128)),
                ('birth_city', models.CharField(default='', max_length=128, null=True)),
                ('birth_state', models.CharField(blank=True, default='', max_length=128, null=True)),
                ('birth_country', models.CharField(default='', max_length=128, null=True)),
                ('birth_country_abbr', models.CharField(default='', max_length=128, null=True)),
                ('nation', models.CharField(default='', max_length=128, null=True)),
                ('nation_abbr', models.CharField(default='', max_length=128, null=True)),
                ('nation_flag', models.ImageField(default='flag.png', upload_to='flags')),
                ('draft_year', models.CharField(default='', max_length=128, null=True)),
                ('draft_round', models.CharField(default='', max_length=128, null=True)),
                ('draft_number', models.CharField(default='', max_length=128, null=True)),
                ('pl_number', models.IntegerField(default=25, null=True)),
                ('age', models.IntegerField(default=25, null=True)),
                ('roster_status', models.CharField(default='', max_length=128)),
                ('nhl_debut', models.CharField(default='', max_length=12)),
                ('rookie', models.BooleanField(default=False)),
                ('captain', models.BooleanField(default=False)),
                ('alt_captain', models.BooleanField(default=False)),
                ('sbs_stats', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('career_stats', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('gamelog_stats', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('games', models.IntegerField(default=25)),
                ('multiteams_seasons', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict)),
                ('seasons_count', models.IntegerField(default=0)),
                ('proj_stats', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('goals', models.IntegerField(default=10)),
                ('goals_avg', models.FloatField(default=10)),
                ('assists', models.IntegerField()),
                ('assists_avg', models.FloatField(default=10)),
                ('points', models.IntegerField()),
                ('points_avg', models.FloatField(default=10)),
                ('plus_minus', models.IntegerField()),
                ('plus_minus_avg', models.FloatField(default=10)),
                ('penalty_min', models.IntegerField()),
                ('penalty_min_avg', models.FloatField(default=10)),
                ('shots', models.IntegerField()),
                ('shots_avg', models.FloatField(default=10)),
                ('hits', models.IntegerField(null=True)),
                ('hits_avg', models.FloatField(default=10, null=True)),
                ('blocks', models.IntegerField(null=True)),
                ('blocks_avg', models.FloatField(default=10, null=True)),
                ('faceoff_wins', models.IntegerField(null=True)),
                ('faceoff_wins_avg', models.FloatField(default=10, null=True)),
                ('pp_points', models.IntegerField()),
                ('pp_points_avg', models.FloatField(default=10)),
                ('sh_points', models.IntegerField()),
                ('sh_points_avg', models.FloatField(default=10)),
                ('time_on_ice', models.CharField(default='', max_length=128)),
                ('time_on_ice_pp', models.CharField(default='', max_length=128)),
                ('time_on_ice_sh', models.CharField(default='', max_length=128)),
                ('fw_stats', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict)),
                ('sbs_stats_avg', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict)),
                ('career_stats_avg', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict)),
                ('compare', models.ManyToManyField(blank=True, related_name='compare_s', to=settings.AUTH_USER_MODEL)),
                ('favorite', models.ManyToManyField(blank=True, related_name='favorite_s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=128)),
                ('nhl_id', models.IntegerField(default=25, unique=True)),
                ('abbr', models.CharField(default='', max_length=128)),
                ('slug', models.SlugField()),
                ('image', models.ImageField(storage=players.storage.OverwriteStorage(), upload_to='teams_logos')),
                ('arena_name', models.CharField(default='', max_length=128)),
                ('arena_location', models.CharField(default='', max_length=128)),
                ('division', models.CharField(default='', max_length=128)),
                ('conference', models.CharField(default='', max_length=128)),
                ('off_site', models.URLField(default='', max_length=128)),
                ('nhl_debut', models.CharField(default='', max_length=128)),
            ],
        ),
        migrations.AddField(
            model_name='skater',
            name='team',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='players.Team'),
        ),
        migrations.AddField(
            model_name='goalie',
            name='team',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='players.Team'),
        ),
    ]
